# version: "3.8"

services:
  postgres:
    image: postgres:16
    container_name: elysia-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: elysia_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: elysia-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass password123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app_network
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    container_name: elysia-app
    restart: unless-stopped
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/elysia_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: password123
      REDIS_DB: 0
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  app_network:
    driver: bridge
